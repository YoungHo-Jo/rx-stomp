var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/RxStomp.html",[0,0.351,1,0.792]],["body/classes/RxStomp.html",[0,0.239,1,0.796,2,0.351,3,0.298,4,0.216,5,1.235,6,0.506,7,0.351,8,1.145,9,1.117,10,1.433,11,1.565,12,0.627,13,1.033,14,2.208,15,2.114,16,1.145,17,0.858,18,0.627,19,1.489,20,1.489,21,2.434,22,1.316,23,2.318,24,1.033,25,1.489,26,3.043,27,1.862,28,1.815,29,2.768,30,2.072,31,1.145,32,1.225,33,1.526,34,1.145,35,2.697,36,1.145,37,1.71,38,1.145,39,1.886,40,0.904,41,0.216,42,0.745,43,2.481,44,1.886,45,1.886,46,1.886,47,1.886,48,1.886,49,2.159,50,2.166,51,1.699,52,1.886,53,1.898,54,1.145,55,1.71,56,1.145,57,1.551,58,1.41,59,1.964,60,0.641,61,1.318,62,0.065,63,0.641,64,3.416,65,2.166,66,1.489,67,1.145,68,1.145,69,1.71,70,2.201,71,1.886,72,1.145,73,2.06,74,1.886,75,1.145,76,2.609,77,0.641,78,2.325,79,1.145,80,2.166,81,1.886,82,0.86,83,1.145,84,1.145,85,1.551,86,0.641,87,0.627,88,2.031,89,1.145,90,1.815,91,3.342,92,2.788,93,2.282,94,2.768,95,0.641,96,1.886,97,1.145,98,1.489,99,0.877,100,1.033,101,1.565,102,0.81,103,1.145,104,1.145,105,1.898,106,1.429,107,2.997,108,2.756,109,1.145,110,0.641,111,1.902,112,1.886,113,1.898,114,0.627,115,1.145,116,1.186,117,1.565,118,1.145,119,0.904,120,1.687,121,1.71,122,1.145,123,0.641,124,1.886,125,3.206,126,1.489,127,0.904,128,1.145,129,1.145,130,0.641,131,0.721,132,1.145,133,0.904,134,1.145,135,1.145,136,0.904,137,2.325,138,1.886,139,1.41,140,1.145,141,2.997,142,1.145,143,1.429,144,0.641,145,1.429,146,1.145,147,1.145,148,1.145,149,1.526,150,1.296,151,1.145,152,0.904,153,1.145,154,0.904,155,0.745,156,1.489,157,0.745,158,0.904,159,1.01,160,0.904,161,0.904,162,0.904,163,1.145,164,1.01,165,2.404,166,1.919,167,1.145,168,1.145,169,1.145,170,1.145,171,1.755,172,1.104,173,0.877,174,0.641,175,1.489,176,1.145,177,1.489,178,1.145,179,0.641,180,1.489,181,1.145,182,1.145,183,1.699,184,1.145,185,1.145,186,1.145,187,1.145,188,1.71,189,0.641,190,2.007,191,2.159,192,1.145,193,1.145,194,1.145,195,1.145,196,1.898,197,2.768,198,1.353,199,1.145,200,1.145,201,0.745,202,0.904,203,1.145,204,1.898,205,1.489,206,1.551,207,1.145,208,0.532,209,1.228,210,1.145,211,3.506,212,3.082,213,1.489,214,1.898,215,1.886,216,1.551,217,0.904,218,1.145,219,1.886,220,1.145,221,1.886,222,0.453,223,1.145,224,2.788,225,1.886,226,1.145,227,1.145,228,1.898,229,1.886,230,1.145,231,1.145,232,1.145,233,1.886,234,1.145,235,1.551,236,1.145,237,1.145,238,1.145,239,1.551,240,2.609,241,1.145,242,0.849,243,1.145,244,1.145,245,0.641,246,1.145,247,1.145,248,2.944,249,3.663,250,1.228,251,0.904,252,1.145,253,0.627,254,1.145,255,0.904,256,1.145,257,1.145,258,0.023,259,1.145,260,1.145,261,1.886,262,0.627,263,2.166,264,1.145,265,1.145,266,1.145,267,1.145,268,1.145,269,1.41,270,0.641,271,0.904,272,1.145,273,1.145,274,0.745,275,1.228,276,0.904,277,1.228,278,0.904,279,1.145,280,0.747,281,1.145,282,0.745,283,0.904,284,1.225,285,0.721,286,0.904,287,1.145,288,1.145,289,0.904,290,0.627,291,0.745,292,0.745,293,0.904,294,0.904,295,1.145,296,1.007,297,0.641,298,0.641,299,1.145,300,1.145,301,1.145,302,1.145,303,1.118,304,1.489,305,0.904,306,0.641,307,0.506,308,0.904,309,1.489,310,1.886,311,0.745,312,0.351,313,1.225,314,1.145,315,0.627,316,0.904,317,1.551,318,1.551,319,0.298,320,2.944,321,0.641,322,0.641,323,0.641,324,0.641,325,1.145,326,0.417,327,0.641,328,0.641,329,0.641,330,1.145,331,0.641,332,0.745,333,0.641,334,0.641,335,1.551,336,0.641,337,0.641,338,0.641,339,1.551,340,1.551,341,1.145,342,0.641,343,0.641,344,1.551,345,0.641,346,0.641,347,0.641,348,1.551,349,0.721,350,2.166,351,1.145,352,0.641,353,0.641,354,0.641,355,0.641,356,0.641,357,0.641,358,0.641,359,1.225,360,0.506,361,1.551,362,0.641,363,0.641,364,0.641,365,0.641,366,1.145,367,0.641,368,0.641,369,0.641,370,0.641,371,0.641,372,0.641,373,0.641,374,0.641,375,0.641,376,0.641,377,0.641,378,1.551,379,0.641,380,0.641,381,0.641,382,1.551,383,1.145,384,0.641,385,0.641,386,0.641,387,0.641,388,0.417,389,0.641,390,0.641,391,0.641,392,0.641,393,0.641,394,0.641,395,0.641,396,0.641,397,1.145,398,1.145,399,1.551,400,0.641,401,0.641,402,0.641,403,0.641,404,0.641,405,0.641,406,0.641,407,0.641,408,0.641,409,0.641,410,0.641,411,1.145,412,0.641,413,0.351,414,0.506,415,1.145,416,0.641,417,0.506,418,0.417,419,0.506,420,0.641,421,1.145,422,0.641,423,0.506,424,0.641,425,0.506,426,0.641,427,0.506,428,1.145,429,0.641,430,0.641,431,0.506,432,0.641,433,0.641,434,0.641,435,0.641,436,0.641,437,0.641,438,0.641,439,1.145,440,0.641,441,0.641,442,0.641,443,0.641,444,0.641,445,0.641,446,0.641,447,0.641,448,0.641,449,0.641,450,0.641,451,0.641,452,0.641,453,0.641,454,0.641,455,0.641,456,0.641,457,0.641,458,0.641,459,0.641,460,0.641,461,0.014]],["title/classes/RxStompConfig.html",[0,0.351,143,1.518]],["body/classes/RxStompConfig.html",[0,0.311,1,0.961,2,0.873,3,0.741,4,0.537,5,1.483,7,0.873,9,1.162,10,1.141,11,2.19,13,1.344,14,2.01,15,2.01,17,0.631,18,1.842,24,1.332,27,1.784,32,2.657,33,2.368,35,2.657,37,1.939,41,0.537,42,1.599,43,2.712,51,2.19,59,2.368,61,1.458,62,0.065,70,1.939,82,0.92,88,1.564,93,1.599,100,1.344,101,1.599,102,0.828,106,1.842,107,3.73,108,3.076,111,1.564,117,1.599,127,1.939,136,1.259,137,1.939,139,2.19,141,1.259,143,1.344,145,2.504,150,1.784,152,2.657,154,2.657,155,1.599,157,1.599,158,2.657,159,2.499,160,2.657,162,2.657,164,2.499,166,1.64,173,2.243,198,0.973,202,1.939,208,1.141,213,1.939,255,3.344,258,0.03,262,1.344,269,2.603,275,1.599,282,2.815,291,2.19,296,1.141,303,1.392,308,2.657,319,0.741,332,1.599,359,1.939,461,0.03,462,0.873,463,2.456,464,2.456,465,2.456,466,3.365,467,3.365,468,3.365,469,1.594,470,1.141,471,2.456,472,2.456,473,1.594,474,2.456,475,1.594,476,1.939,477,2.456,478,2.456,479,1.344,480,3.365,481,2.456,482,1.594,483,1.939,484,1.939,485,3.365,486,2.456,487,2.456,488,2.456,489,1.344,490,2.456,491,1.594,492,1.939,493,1.594,494,2.456,495,1.594,496,2.456,497,2.657,498,2.657,499,3.03,500,3.03,501,2.456,502,1.594,503,2.456,504,2.456,505,1.594,506,2.456,507,2.456,508,1.594,509,2.456,510,3.365,511,3.838,512,2.456,513,2.456,514,2.456,515,1.594,516,2.499,517,1.599,518,2.19,519,3.365,520,3.365,521,2.456,522,1.599,523,2.456,524,2.456,525,1.594,526,2.456,527,2.456,528,1.594]],["title/classes/RxStompRPC.html",[0,0.351,529,1.805]],["body/classes/RxStompRPC.html",[0,0.404,1,1.245,2,1.246,3,1.058,4,0.767,5,1.347,7,1.246,9,1.046,12,1.748,13,1.748,17,0.902,22,1.246,23,2.503,24,1.264,27,2.082,28,2.601,30,2.028,41,0.767,43,2.388,49,2.078,58,1.482,59,2.018,61,1.243,62,0.065,82,0.765,88,1.484,99,1.484,106,1.246,111,1.484,120,2.304,149,2.018,171,2.018,172,1.46,173,1.714,188,3.537,190,1.482,191,1.482,197,2.521,205,2.521,222,1.81,250,2.078,253,1.748,258,0.039,269,2.078,303,2.028,304,2.521,305,1.797,307,1.797,311,2.078,312,1.246,319,1.058,360,1.797,413,1.748,423,1.797,431,1.797,461,0.039,479,1.246,489,2.188,529,2.078,530,1.797,531,2.84,532,2.84,533,1.864,534,2.188,535,2.276,536,3.996,537,2.188,538,2.276,539,2.276,540,3.192,541,2.276,542,2.601,543,3.687,544,3.192,545,2.276,546,1.797,547,1.482,548,2.078,549,3.996,550,3.996,551,3.996,552,3.996,553,2.276,554,1.482,555,1.797,556,2.078,557,2.276,558,2.276,559,2.276,560,2.276,561,3.192,562,3.192,563,3.192,564,2.276,565,2.276,566,2.276,567,2.276,568,3.192,569,2.276,570,2.276,571,2.276,572,3.192,573,2.911,574,2.276,575,2.276,576,1.797,577,2.276,578,2.276,579,2.276,580,2.276,581,2.276,582,2.276]],["title/classes/RxStompRPCConfig.html",[0,0.351,537,1.518]],["body/classes/RxStompRPCConfig.html",[0,0.49,1,1.216,2,1.659,3,1.409,4,1.022,5,1.436,7,1.659,9,1.075,17,1.2,22,1.659,23,2.117,24,1.687,30,1.409,41,1.022,42,2.517,43,2.594,59,2.117,61,1.436,62,0.064,114,2.117,116,2.456,166,2.456,172,1.531,173,2.085,222,1.907,258,0.048,296,1.798,303,1.98,311,1.973,312,2.117,319,1.798,349,1.798,461,0.048,462,1.659,489,2.456,533,1.835,534,2.637,537,2.117,548,2.92,554,2.517,555,3.053,556,3.085,583,3.659,584,3.542,585,3.031,586,3.867,587,3.867,588,3.031]],["title/coverage.html",[589,2.883]],["body/coverage.html",[0,0.609,1,1.057,4,1.248,5,1.621,6,2.923,9,1.116,61,1.248,62,0.061,102,1.248,143,2.026,150,1.721,258,0.054,461,0.054,462,2.394,529,2.41,530,2.923,533,1.466,537,2.026,589,2.923,590,3.702,591,3.702,592,4.809,593,3.702,594,3.702,595,3.702,596,3.702,597,3.702,598,3.702]],["title/dependencies.html",[599,1.553,600,1.805]],["body/dependencies.html",[17,1.575,62,0.06,253,2.178,258,0.056,461,0.056,547,2.59,600,2.178,601,3.978,602,3.978]],["title/miscellaneous/enumerations.html",[603,1.306,604,2.604]],["body/miscellaneous/enumerations.html",[1,1.111,5,1.311,9,1.079,14,1.808,41,1.311,62,0.055,78,3.072,98,3.554,258,0.055,313,3.554,461,0.055,603,2.13,604,3.072,605,3.072,606,4.502,607,3.072,608,3.89]],["title/index.html",[41,0.804,242,1.306,609,1.553]],["body/index.html",[1,0.962,9,0.99,10,1.565,20,2.659,21,3.262,22,2.262,23,1.844,61,1.135,62,0.055,82,0.807,87,2.446,99,1.92,183,2.192,198,1.334,258,0.051,277,2.689,280,1.334,285,1.565,315,2.446,316,3.262,461,0.051,470,1.92,516,2.689,599,2.192,610,3.368,611,4.131,612,3.368,613,2.192,614,3.368,615,2.659,616,3.368,617,3.368,618,2.689,619,3.528,620,3.262,621,2.659,622,2.192,623,3.368,624,3.368,625,3.368,626,4.131,627,2.192,628,2.192,629,3.368,630,2.262,631,4.131,632,2.909,633,3.368,634,3.368,635,2.659,636,3.368,637,3.368,638,3.368,639,3.368,640,3.368,641,2.659,642,2.659,643,3.368,644,3.368,645,3.368,646,3.368,647,3.368,648,2.659,649,3.368,650,2.909,651,2.659]],["title/license.html",[242,1.306,609,1.553,650,1.553]],["body/license.html",[4,1.124,14,1.551,53,2.634,62,0.05,82,0.984,87,1.826,94,2.634,102,1.124,177,2.634,209,2.172,258,0.05,290,1.826,461,0.05,620,3.513,622,2.172,635,2.634,641,2.634,642,2.634,650,2.172,651,2.634,652,4.45,653,3.336,654,2.634,655,4.107,656,3.336,657,3.336,658,3.336,659,3.336,660,4.107,661,3.336,662,3.666,663,5.007,664,3.336,665,4.107,666,4.45,667,3.336,668,3.243,669,3.336,670,3.336,671,3.336,672,3.336,673,3.336,674,3.336,675,3.336,676,3.336,677,3.336,678,2.634,679,4.107,680,4.107,681,3.336,682,3.336,683,4.107,684,3.336,685,3.336,686,3.336,687,3.336,688,3.336,689,3.336,690,3.336,691,3.336,692,3.336,693,3.336,694,3.336,695,3.336,696,3.336,697,3.336,698,3.336,699,3.336,700,3.336,701,3.336,702,3.336]],["title/modules.html",[703,1.999]],["body/modules.html",[62,0.057,258,0.057,461,0.057,703,2.213]],["title/overview.html",[704,2.883]],["body/overview.html",[0,0.51,62,0.056,258,0.056,461,0.056,704,3.177,705,4.024]],["title/miscellaneous/typealiases.html",[603,1.306,706,3.298]],["body/miscellaneous/typealiases.html",[5,1.308,9,1.078,24,1.537,33,2.125,41,1.308,61,1.308,62,0.055,222,1.537,258,0.055,461,0.055,462,2.461,533,1.78,534,2.125,548,3.09,603,2.125,605,3.065,707,3.881]],["title/additional-documentation/remote-procedure-call-(rpc).html",[111,0.781,531,1.094,532,1.094,533,0.665,708,0.781,709,0.781]],["body/additional-documentation/remote-procedure-call-(rpc).html",[0,0.305,10,1.903,12,2.08,15,1.903,25,1.901,26,1.901,27,1.119,28,2.161,29,1.901,30,2.064,49,1.567,58,1.567,62,0.063,69,1.901,82,1.029,88,1.766,90,2.161,100,1.318,101,1.567,102,0.812,105,1.901,111,1.543,113,2.999,114,2.08,116,2.351,119,1.901,120,2.431,121,1.901,131,1.119,149,2.538,166,1.318,171,1.318,172,1.314,173,1.543,190,1.567,191,1.567,198,1.701,201,2.161,208,1.119,214,2.621,222,0.953,228,1.901,250,2.796,251,2.999,253,1.318,258,0.047,262,1.817,278,2.621,280,1.621,283,1.901,284,2.621,285,1.119,289,1.901,290,1.318,292,2.161,293,1.901,294,1.901,312,1.318,349,1.119,413,1.817,414,1.901,417,1.901,418,2.161,419,1.901,425,1.901,427,1.901,461,0.041,479,1.817,489,1.318,517,2.161,522,1.567,531,1.567,532,1.567,533,1.314,542,1.567,547,1.567,554,2.161,556,2.473,573,2.621,576,1.901,583,2.621,584,1.901,600,2.241,648,1.901,678,1.901,703,1.318,708,1.543,710,1.901,711,2.408,712,1.901,713,2.408,714,2.408,715,2.408,716,4.704,717,4.094,718,3.319,719,2.408,720,4.094,721,2.408,722,2.408,723,2.408,724,1.901,725,2.408,726,1.901,727,3.319,728,3.319,729,3.319,730,2.408,731,3.319,732,2.408,733,2.408,734,3.319,735,2.408,736,3.319,737,1.901,738,2.408,739,2.408,740,1.901,741,2.408,742,2.408,743,2.408,744,2.408,745,3.319,746,2.408,747,3.319,748,3.319,749,2.408,750,2.408,751,2.408,752,3.798,753,3.319,754,3.319,755,2.408,756,2.408,757,2.408,758,2.408,759,2.408,760,2.408,761,2.408,762,2.408,763,2.408,764,1.901,765,2.408,766,2.408,767,2.408,768,2.408,769,2.408,770,2.408,771,3.319,772,2.408,773,2.408,774,1.901,775,2.408,776,2.408,777,2.408,778,2.408,779,2.408,780,2.408,781,2.408,782,2.408,783,2.408,784,2.408,785,1.901,786,2.408,787,2.408]],["title/additional-documentation/sockjs-support.html",[208,0.973,518,1.362,708,0.973,709,0.973]],["body/additional-documentation/sockjs-support.html",[0,0.335,10,1.645,11,2.889,12,1.449,13,1.449,14,1.23,15,1.23,18,1.449,24,1.048,27,1.645,33,2.331,62,0.063,66,2.09,73,3.149,82,1.064,88,1.645,90,1.723,93,2.304,99,1.645,100,1.449,106,1.449,108,2.304,126,2.09,131,1.23,139,1.723,145,1.938,149,1.449,150,1.23,155,2.304,156,2.795,157,2.304,159,2.772,161,2.795,164,1.723,171,1.449,172,1.048,175,2.09,180,2.795,183,1.723,196,2.09,198,1.402,208,2.063,222,1.048,258,0.044,262,1.938,271,2.09,274,2.304,277,2.772,280,1.048,285,1.645,286,2.09,292,1.723,296,1.23,303,1.23,309,3.362,315,1.449,319,1.23,326,1.723,332,1.723,388,1.723,413,1.449,461,0.044,476,3.362,479,1.938,483,2.09,484,2.09,497,2.09,498,2.09,499,2.795,500,3.149,516,2.772,517,1.723,518,3.269,522,2.304,607,2.09,613,1.723,615,2.09,618,1.723,621,2.09,627,1.723,628,2.304,630,1.449,662,2.09,668,2.795,710,2.09,712,2.09,724,2.09,740,2.09,774,2.09,785,2.795,788,2.647,789,2.647,790,2.647,791,2.647,792,2.647,793,2.647,794,3.54,795,2.647,796,2.647,797,4.258,798,2.647,799,2.647,800,3.54,801,3.54,802,3.54,803,2.647,804,2.647,805,2.647,806,2.647,807,2.647,808,2.647,809,2.647,810,2.647,811,2.647,812,3.54,813,2.647,814,2.647,815,2.647,816,2.647,817,2.647,818,2.647,819,2.647,820,2.647,821,3.54,822,3.54,823,2.647,824,2.647,825,2.795,826,2.795,827,2.647,828,2.647]],["title/additional-documentation/change-log.html",[470,0.973,630,1.146,708,0.973,709,0.973]],["body/additional-documentation/change-log.html",[17,1.488,62,0.054,82,0.901,102,1.266,131,1.746,209,2.446,258,0.054,280,1.488,315,2.057,349,1.746,388,2.446,461,0.054,470,1.746,630,2.057,654,3.483,829,4.411,830,3.757,831,4.411,832,3.757,833,3.757,834,3.757,835,4.411,836,3.757,837,3.757,838,2.966,839,2.966,840,3.757,841,3.757,842,3.757,843,3.757,844,3.757,845,3.757,846,3.757]],["title/additional-documentation/how-to-contribute.html",[632,1.553,708,1.109,709,1.109]],["body/additional-documentation/how-to-contribute.html",[3,1.467,4,0.755,9,0.876,15,1.698,18,1.226,19,1.768,30,1.041,40,1.768,51,1.457,55,1.768,62,0.063,82,1.165,87,1.226,91,1.768,99,1.467,102,1.337,114,2.441,116,1.226,117,1.457,120,1.226,131,1.041,133,1.768,145,1.727,150,1.041,172,0.887,198,1.447,201,2.825,204,2.491,217,1.768,242,1.226,258,0.039,274,1.457,275,1.457,276,2.491,280,0.887,282,1.457,285,1.844,290,1.727,291,2.378,296,1.698,326,2.054,349,1.698,418,2.054,461,0.039,470,1.467,492,1.768,534,1.226,542,1.457,546,1.768,599,2.054,600,1.727,609,1.457,613,2.378,618,2.378,619,2.491,622,1.457,627,3.117,628,2.054,632,2.054,703,1.226,709,1.041,726,1.768,737,1.768,764,1.768,825,1.768,826,3.837,838,1.768,839,1.768,847,2.239,848,2.239,849,2.239,850,3.155,851,3.155,852,2.239,853,2.239,854,3.155,855,2.239,856,2.239,857,2.239,858,2.239,859,2.239,860,3.653,861,2.239,862,3.653,863,4.915,864,2.239,865,2.239,866,3.155,867,4.788,868,2.239,869,3.967,870,3.155,871,2.239,872,2.239,873,2.239,874,2.239,875,2.239,876,2.239,877,2.239,878,2.239,879,2.239,880,3.155,881,3.967,882,2.239,883,2.239,884,2.239,885,2.239,886,2.239,887,2.239,888,2.239,889,2.239,890,3.155,891,2.239,892,4.339,893,4.628,894,2.239,895,3.155,896,2.239,897,3.155,898,2.239,899,2.239,900,2.239,901,2.239,902,3.155,903,3.653,904,2.239,905,3.155,906,2.239,907,2.239,908,2.239,909,2.239,910,2.239,911,2.239,912,2.239,913,3.155,914,3.155,915,2.239,916,2.239,917,2.239,918,2.239,919,2.239,920,2.239,921,2.239,922,3.155,923,2.239,924,2.239,925,2.239,926,2.239,927,2.239,928,2.239,929,2.239,930,2.239,931,2.239,932,2.239,933,2.239,934,2.239,935,2.239,936,2.239,937,2.239,938,2.239,939,2.239,940,2.239,941,2.239,942,2.239,943,3.155,944,2.239,945,2.239,946,2.239,947,2.239,948,2.239]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["0",{"_index":159,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["0.1.0",{"_index":829,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["1.0",{"_index":510,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.1",{"_index":511,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.1.1",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["10",{"_index":831,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["100",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":841,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["15/15",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["15674:15674",{"_index":925,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["20",{"_index":810,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["200",{"_index":163,"title":{},"body":{"classes/RxStomp.html":{}}}],["20000",{"_index":161,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["2018",{"_index":654,"title":{},"body":{"license.html":{},"additional-documentation/change-log.html":{}}}],["28",{"_index":832,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["3/3",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":705,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":813,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["5.0.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":812,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["9",{"_index":227,"title":{},"body":{"classes/RxStomp.html":{}}}],["_beforeconnect",{"_index":333,"title":{},"body":{"classes/RxStomp.html":{}}}],["_changestate(st",{"_index":459,"title":{},"body":{"classes/RxStomp.html":{}}}],["_debug",{"_index":336,"title":{},"body":{"classes/RxStomp.html":{}}}],["_queuedmessag",{"_index":329,"title":{},"body":{"classes/RxStomp.html":{}}}],["_repliesobserv",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuenam",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_sendqueuedmessag",{"_index":396,"title":{},"body":{"classes/RxStomp.html":{}}}],["_serverheadersbehavioursubject",{"_index":321,"title":{},"body":{"classes/RxStomp.html":{}}}],["_setupreplyqueu",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupunhandledmessag",{"_index":449,"title":{},"body":{"classes/RxStomp.html":{}}}],["_setupunhandledreceipt",{"_index":453,"title":{},"body":{"classes/RxStomp.html":{}}}],["_stompclient",{"_index":331,"title":{},"body":{"classes/RxStomp.html":{}}}],["abov",{"_index":678,"title":{},"body":{"license.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["accept",{"_index":756,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["access",{"_index":773,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["accessor",{"_index":56,"title":{},"body":{"classes/RxStomp.html":{}}}],["account",{"_index":883,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["acknowledg",{"_index":248,"title":{},"body":{"classes/RxStomp.html":{}}}],["action",{"_index":699,"title":{},"body":{"license.html":{}}}],["activ",{"_index":50,"title":{},"body":{"classes/RxStomp.html":{}}}],["activemq",{"_index":587,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["actual",{"_index":125,"title":{},"body":{"classes/RxStomp.html":{}}}],["ad",{"_index":214,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["add",{"_index":147,"title":{},"body":{"classes/RxStomp.html":{}}}],["addit",{"_index":708,"title":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["adjust",{"_index":824,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["affect",{"_index":828,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["ajax",{"_index":763,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["alias",{"_index":707,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":196,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["alreadi",{"_index":69,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["alway",{"_index":74,"title":{},"body":{"classes/RxStomp.html":{}}}],["and/or",{"_index":673,"title":{},"body":{"license.html":{}}}],["angular",{"_index":748,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["angular2",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{},"dependencies.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["anoth",{"_index":765,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["any).assign",{"_index":360,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["apart",{"_index":786,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["api",{"_index":858,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["applic",{"_index":615,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{}}}],["application/octet",{"_index":238,"title":{},"body":{"classes/RxStomp.html":{}}}],["approach",{"_index":725,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["appropri",{"_index":182,"title":{},"body":{"classes/RxStomp.html":{}}}],["argument",{"_index":753,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["aris",{"_index":702,"title":{},"body":{"license.html":{}}}],["around",{"_index":827,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["array",{"_index":327,"title":{},"body":{"classes/RxStomp.html":{}}}],["articl",{"_index":443,"title":{},"body":{"classes/RxStomp.html":{}}}],["artifact",{"_index":928,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["assign",{"_index":334,"title":{},"body":{"classes/RxStomp.html":{}}}],["associ",{"_index":664,"title":{},"body":{"license.html":{}}}],["astha",{"_index":643,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":247,"title":{},"body":{"classes/RxStomp.html":{}}}],["attempt",{"_index":139,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["attribut",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":635,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":180,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["automat",{"_index":213,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["awar",{"_index":852,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["back",{"_index":717,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["backend",{"_index":727,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["base",{"_index":259,"title":{},"body":{"classes/RxStomp.html":{}}}],["beat",{"_index":819,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["beautifulli",{"_index":405,"title":{},"body":{"classes/RxStomp.html":{}}}],["befor",{"_index":332,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["beforeconnect",{"_index":32,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["behavior",{"_index":104,"title":{},"body":{"classes/RxStomp.html":{}}}],["behaviorsubject",{"_index":76,"title":{},"body":{"classes/RxStomp.html":{}}}],["behaviorsubject(nul",{"_index":354,"title":{},"body":{"classes/RxStomp.html":{}}}],["behaviorsubject(rxstompstate.clos",{"_index":343,"title":{},"body":{"classes/RxStomp.html":{}}}],["behavioursubject",{"_index":415,"title":{},"body":{"classes/RxStomp.html":{}}}],["believ",{"_index":741,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["beta.1",{"_index":840,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["beta.2",{"_index":830,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["better",{"_index":387,"title":{},"body":{"classes/RxStomp.html":{}}}],["bin",{"_index":888,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["binari",{"_index":204,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["binarybodi",{"_index":205,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["binarydata",{"_index":233,"title":{},"body":{"classes/RxStomp.html":{}}}],["bit",{"_index":384,"title":{},"body":{"classes/RxStomp.html":{}}}],["bodi",{"_index":197,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["boolean",{"_index":178,"title":{},"body":{"classes/RxStomp.html":{}}}],["both",{"_index":291,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/how-to-contribute.html":{}}}],["box",{"_index":210,"title":{},"body":{"classes/RxStomp.html":{}}}],["branch",{"_index":938,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["break",{"_index":132,"title":{},"body":{"classes/RxStomp.html":{}}}],["broker",{"_index":15,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["brokerurl",{"_index":152,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["browser",{"_index":613,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["browsersbas",{"_index":936,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["btw",{"_index":780,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["build",{"_index":867,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["build/test/doc",{"_index":844,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["built",{"_index":927,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["bundl",{"_index":891,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["c",{"_index":653,"title":{},"body":{"license.html":{}}}],["call",{"_index":111,"title":{"additional-documentation/remote-procedure-call-(rpc).html":{}},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["call.html",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["callback",{"_index":35,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["caller",{"_index":416,"title":{},"body":{"classes/RxStomp.html":{}}}],["care",{"_index":299,"title":{},"body":{"classes/RxStomp.html":{}}}],["carri",{"_index":246,"title":{},"body":{"classes/RxStomp.html":{}}}],["case",{"_index":201,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["caus",{"_index":941,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["caution",{"_index":217,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["chang",{"_index":470,"title":{"additional-documentation/change-log.html":{}},"body":{"classes/RxStompConfig.html":{},"index.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["charalampidi",{"_index":640,"title":{},"body":{"index.html":{}}}],["charg",{"_index":659,"title":{},"body":{"license.html":{}}}],["check",{"_index":100,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["checkout",{"_index":880,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["chrome",{"_index":905,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["claim",{"_index":695,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["clean",{"_index":838,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["cleanup",{"_index":431,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["client",{"_index":10,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"index.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["client#brokerurl",{"_index":519,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":527,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client';impl",{"_index":804,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["client]{@link",{"_index":317,"title":{},"body":{"classes/RxStomp.html":{}}}],["close",{"_index":98,"title":{},"body":{"classes/RxStomp.html":{},"miscellaneous/enumerations.html":{}}}],["closur",{"_index":426,"title":{},"body":{"classes/RxStomp.html":{}}}],["code",{"_index":285,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["cold",{"_index":446,"title":{},"body":{"classes/RxStomp.html":{}}}],["coldobserv",{"_index":422,"title":{},"body":{"classes/RxStomp.html":{}}}],["coldobservable.pipe(shar",{"_index":448,"title":{},"body":{"classes/RxStomp.html":{}}}],["combin",{"_index":256,"title":{},"body":{"classes/RxStomp.html":{}}}],["come",{"_index":625,"title":{},"body":{"index.html":{}}}],["commun",{"_index":712,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["compat",{"_index":793,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["complaint",{"_index":257,"title":{},"body":{"classes/RxStomp.html":{}}}],["complet",{"_index":126,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["compliant",{"_index":97,"title":{},"body":{"classes/RxStomp.html":{}}}],["complic",{"_index":404,"title":{},"body":{"classes/RxStomp.html":{}}}],["compodoc",{"_index":857,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["comput",{"_index":733,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["concept",{"_index":775,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["condit",{"_index":677,"title":{},"body":{"license.html":{}}}],["config",{"_index":312,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["config.t",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:105",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:18",{"_index":585,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:19",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":588,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:32",{"_index":508,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:35",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:58",{"_index":515,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:65",{"_index":505,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:72",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:79",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:88",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:95",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["configur",{"_index":51,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/how-to-contribute.html":{}}}],["configure(rxstompconfig",{"_index":142,"title":{},"body":{"classes/RxStomp.html":{}}}],["connect",{"_index":14,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/sockjs-support.html":{}}}],["connecthead",{"_index":154,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["connectionst",{"_index":44,"title":{},"body":{"classes/RxStomp.html":{}}}],["consequ",{"_index":302,"title":{},"body":{"classes/RxStomp.html":{}}}],["consol",{"_index":816,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["console.log(message.bodi",{"_index":762,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["console.log(new",{"_index":167,"title":{},"body":{"classes/RxStomp.html":{}}}],["const",{"_index":149,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["constructor(priv",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(rxstomp",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["consum",{"_index":761,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["content",{"_index":211,"title":{},"body":{"classes/RxStomp.html":{}}}],["contract",{"_index":700,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":632,"title":{"additional-documentation/how-to-contribute.html":{}},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["control",{"_index":874,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["convent",{"_index":711,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["convert",{"_index":437,"title":{},"body":{"classes/RxStomp.html":{}}}],["copi",{"_index":662,"title":{},"body":{"license.html":{},"additional-documentation/sockjs-support.html":{}}}],["copyright",{"_index":652,"title":{},"body":{"license.html":{}}}],["correct",{"_index":718,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["correl",{"_index":720,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["correlationid",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["correspond",{"_index":260,"title":{},"body":{"classes/RxStomp.html":{}}}],["coverag",{"_index":589,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covert",{"_index":199,"title":{},"body":{"classes/RxStomp.html":{}}}],["creat",{"_index":12,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["current",{"_index":80,"title":{},"body":{"classes/RxStomp.html":{}}}],["currentst",{"_index":347,"title":{},"body":{"classes/RxStomp.html":{}}}],["custom",{"_index":784,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["d",{"_index":923,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["damag",{"_index":696,"title":{},"body":{"license.html":{}}}],["date",{"_index":168,"title":{},"body":{"classes/RxStomp.html":{}}}],["deactiv",{"_index":52,"title":{},"body":{"classes/RxStomp.html":{}}}],["deal",{"_index":665,"title":{},"body":{"license.html":{}}}],["debug",{"_index":164,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["debugfntyp",{"_index":308,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["deep",{"_index":644,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":641,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":296,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["defaultmessagessubscript",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defin",{"_index":59,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["definit",{"_index":626,"title":{},"body":{"index.html":{}}}],["delay",{"_index":506,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["delet",{"_index":362,"title":{},"body":{"classes/RxStomp.html":{}}}],["demo/tree/sockj",{"_index":789,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["depend",{"_index":600,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["deriv",{"_index":755,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["design",{"_index":279,"title":{},"body":{"classes/RxStomp.html":{}}}],["destin",{"_index":191,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["detail",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["develop",{"_index":618,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["diagnost",{"_index":815,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["differ",{"_index":19,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["dimitri",{"_index":639,"title":{},"body":{"index.html":{}}}],["directli",{"_index":300,"title":{},"body":{"classes/RxStomp.html":{}}}],["disabl",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["disconnect",{"_index":137,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["disconnecthead",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["distribut",{"_index":622,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/how-to-contribute.html":{}}}],["doc",{"_index":893,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["docker",{"_index":903,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["dockerfil",{"_index":902,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["document",{"_index":102,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"license.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["documentation/rpc",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["don't",{"_index":740,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["drop",{"_index":272,"title":{},"body":{"classes/RxStomp.html":{}}}],["dure",{"_index":275,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/how-to-contribute.html":{}}}],["e.g",{"_index":202,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["each",{"_index":92,"title":{},"body":{"classes/RxStomp.html":{}}}],["earlier",{"_index":281,"title":{},"body":{"classes/RxStomp.html":{}}}],["echo",{"_index":737,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["edit",{"_index":910,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["edit/writ",{"_index":847,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["emit",{"_index":79,"title":{},"body":{"classes/RxStomp.html":{}}}],["emul",{"_index":817,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["enabl",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/how-to-contribute.html":{}}}],["end",{"_index":84,"title":{},"body":{"classes/RxStomp.html":{}}}],["endpoint",{"_index":25,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["enumer",{"_index":604,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":850,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["equal",{"_index":744,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["error",{"_index":96,"title":{},"body":{"classes/RxStomp.html":{}}}],["es5",{"_index":897,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["es6",{"_index":932,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["esm5",{"_index":896,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["establish",{"_index":65,"title":{},"body":{"classes/RxStomp.html":{}}}],["etc/rabbitmq/rabbitmq.conf",{"_index":919,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["even",{"_index":271,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["event",{"_index":692,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":647,"title":{},"body":{"index.html":{}}}],["exact",{"_index":103,"title":{},"body":{"classes/RxStomp.html":{}}}],["exampl",{"_index":24,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sockjs-support.html":{}}}],["except",{"_index":31,"title":{},"body":{"classes/RxStomp.html":{}}}],["exist",{"_index":148,"title":{},"body":{"classes/RxStomp.html":{}}}],["expect",{"_index":745,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["explanatori",{"_index":442,"title":{},"body":{"classes/RxStomp.html":{}}}],["export",{"_index":319,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["expos",{"_index":20,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{}}}],["express",{"_index":685,"title":{},"body":{"license.html":{}}}],["f8094ed53339",{"_index":447,"title":{},"body":{"classes/RxStomp.html":{}}}],["factor",{"_index":842,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["fail",{"_index":822,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["failur",{"_index":40,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["fals",{"_index":176,"title":{},"body":{"classes/RxStomp.html":{}}}],["few",{"_index":768,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["field",{"_index":364,"title":{},"body":{"classes/RxStomp.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"license.html":{},"additional-documentation/how-to-contribute.html":{}}}],["filter",{"_index":305,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["filter((currentst",{"_index":346,"title":{},"body":{"classes/RxStomp.html":{}}}],["filter((head",{"_index":357,"title":{},"body":{"classes/RxStomp.html":{}}}],["finnigan",{"_index":637,"title":{},"body":{"index.html":{}}}],["first",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{},"additional-documentation/how-to-contribute.html":{}}}],["fit",{"_index":688,"title":{},"body":{"license.html":{}}}],["follow",{"_index":290,"title":{},"body":{"classes/RxStomp.html":{},"license.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["fork",{"_index":882,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["form",{"_index":796,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["frame",{"_index":91,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["frame]{@link",{"_index":325,"title":{},"body":{"classes/RxStomp.html":{}}}],["free",{"_index":658,"title":{},"body":{"license.html":{}}}],["frequent",{"_index":807,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["function",{"_index":33,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sockjs-support.html":{}}}],["furnish",{"_index":676,"title":{},"body":{"license.html":{}}}],["further",{"_index":409,"title":{},"body":{"classes/RxStomp.html":{}}}],["futur",{"_index":799,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["gener",{"_index":892,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["generatebinarydata",{"_index":234,"title":{},"body":{"classes/RxStomp.html":{}}}],["get",{"_index":242,"title":{"index.html":{},"license.html":{}},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["getstompcli",{"_index":297,"title":{},"body":{"classes/RxStomp.html":{}}}],["git",{"_index":873,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["github",{"_index":881,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["give",{"_index":777,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["good",{"_index":235,"title":{},"body":{"classes/RxStomp.html":{}}}],["grant",{"_index":657,"title":{},"body":{"license.html":{}}}],["guest",{"_index":156,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["guid",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/how-to-contribute.html":{}}}],["guide](../addit",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["guidelin",{"_index":947,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["hack",{"_index":823,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["handl",{"_index":39,"title":{},"body":{"classes/RxStomp.html":{}}}],["handler",{"_index":371,"title":{},"body":{"classes/RxStomp.html":{}}}],["handshak",{"_index":509,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["happen",{"_index":440,"title":{},"body":{"classes/RxStomp.html":{}}}],["hash",{"_index":758,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["header",{"_index":88,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["headers.ack",{"_index":421,"title":{},"body":{"classes/RxStomp.html":{}}}],["headers['correl",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['repli",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["heart",{"_index":818,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["heartbeat",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["heartbeat_in",{"_index":808,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["heartbeat_out",{"_index":809,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["heartbeatincom",{"_index":158,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["heartbeatoutgo",{"_index":160,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["hello",{"_index":228,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["helper",{"_index":907,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["here",{"_index":283,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["herebi",{"_index":656,"title":{},"body":{"license.html":{}}}],["hold",{"_index":328,"title":{},"body":{"classes/RxStomp.html":{}}}],["holder",{"_index":693,"title":{},"body":{"license.html":{}}}],["host",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["hot",{"_index":438,"title":{},"body":{"classes/RxStomp.html":{}}}],["http://karma",{"_index":864,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://compodoc.app",{"_index":859,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":792,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["https://git",{"_index":875,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://github.com/stomp",{"_index":315,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["https://jasmine.github.io",{"_index":861,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://medium.com/@benlesh/hot",{"_index":444,"title":{},"body":{"classes/RxStomp.html":{}}}],["https://nodejs.org",{"_index":870,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://stomp",{"_index":108,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["https://webpack.js.org",{"_index":868,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://www.npmjs.com",{"_index":872,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["https://www.rabbitmq.com/stomp.html#d.tqd",{"_index":742,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["https://www.rabbitmq.com/tutorials/tutori",{"_index":721,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["https://www.typescriptlang.org",{"_index":856,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["i.",{"_index":713,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["id",{"_index":250,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["ideal",{"_index":770,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["identifi",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":72,"title":{},"body":{"classes/RxStomp.html":{}}}],["imag",{"_index":904,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["immedi",{"_index":70,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["impact",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implement",{"_index":413,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["impli",{"_index":686,"title":{},"body":{"license.html":{}}}],["import",{"_index":303,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["includ",{"_index":620,"title":{},"body":{"index.html":{},"license.html":{}}}],["incom",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["incomingmessag",{"_index":734,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["inde",{"_index":406,"title":{},"body":{"classes/RxStomp.html":{}}}],["index",{"_index":41,"title":{"index.html":{}},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["index.d.t",{"_index":898,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["indic",{"_index":216,"title":{},"body":{"classes/RxStomp.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["inform",{"_index":621,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{}}}],["initi",{"_index":131,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["inject",{"_index":749,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["instal",{"_index":628,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["instanc",{"_index":13,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"additional-documentation/sockjs-support.html":{}}}],["instead",{"_index":795,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["instruct",{"_index":877,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["intern",{"_index":326,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["interv",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["introduct",{"_index":616,"title":{},"body":{"index.html":{}}}],["invok",{"_index":117,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/how-to-contribute.html":{}}}],["involv",{"_index":648,"title":{},"body":{"index.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["issu",{"_index":276,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["jasmin",{"_index":860,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["jasmine/karma",{"_index":906,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["javascript",{"_index":359,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["jimi",{"_index":638,"title":{},"body":{"index.html":{}}}],["js.github.io/stomp",{"_index":800,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["js.github.io/stompjs/classes/client.html",{"_index":318,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#activ",{"_index":140,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#beforeconnect",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#brokerurl",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#configur",{"_index":170,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#connecthead",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#deactiv",{"_index":186,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#disconnecthead",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatincom",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatoutgo",{"_index":504,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#onstomperror",{"_index":109,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#onunhandledmessag",{"_index":122,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#onunhandledreceipt",{"_index":129,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#publish",{"_index":243,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#reconnectdelay",{"_index":507,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#stompvers",{"_index":514,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#subscrib",{"_index":295,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#watchforreceipt",{"_index":267,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/client.html#websocketfactori",{"_index":524,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/frame.html",{"_index":261,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/classes/message.html",{"_index":323,"title":{},"body":{"classes/RxStomp.html":{}}}],["js.github.io/stompjs/interfaces/publishparams.html",{"_index":223,"title":{},"body":{"classes/RxStomp.html":{}}}],["js/ng2",{"_index":843,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["js/ng4",{"_index":788,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["js/stomp",{"_index":649,"title":{},"body":{"index.html":{}}}],["js/stompj",{"_index":316,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{}}}],["json",{"_index":203,"title":{},"body":{"classes/RxStomp.html":{}}}],["karma",{"_index":862,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["karma.conf.j",{"_index":899,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["keep",{"_index":135,"title":{},"body":{"classes/RxStomp.html":{}}}],["key",{"_index":18,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["kind",{"_index":684,"title":{},"body":{"license.html":{}}}],["know",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["kumar",{"_index":642,"title":{},"body":{"index.html":{},"license.html":{}}}],["languag",{"_index":726,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["left",{"_index":432,"title":{},"body":{"classes/RxStomp.html":{}}}],["length",{"_index":212,"title":{},"body":{"classes/RxStomp.html":{}}}],["level",{"_index":389,"title":{},"body":{"classes/RxStomp.html":{}}}],["liabil",{"_index":697,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":694,"title":{},"body":{"license.html":{}}}],["librari",{"_index":277,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{},"additional-documentation/sockjs-support.html":{}}}],["licens",{"_index":650,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license.md",{"_index":886,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["limit",{"_index":668,"title":{},"body":{"license.html":{},"additional-documentation/sockjs-support.html":{}}}],["link",{"_index":457,"title":{},"body":{"classes/RxStomp.html":{}}}],["local",{"_index":239,"title":{},"body":{"classes/RxStomp.html":{}}}],["localhost",{"_index":912,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["lock.json",{"_index":900,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["log",{"_index":630,"title":{"additional-documentation/change-log.html":{}},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["log.md",{"_index":945,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["logic",{"_index":403,"title":{},"body":{"classes/RxStomp.html":{}}}],["login",{"_index":155,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["long",{"_index":441,"title":{},"body":{"classes/RxStomp.html":{}}}],["look",{"_index":743,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["loop",{"_index":181,"title":{},"body":{"classes/RxStomp.html":{}}}],["magic",{"_index":427,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["main",{"_index":8,"title":{},"body":{"classes/RxStomp.html":{}}}],["make",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["manag",{"_index":871,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["mandatori",{"_index":229,"title":{},"body":{"classes/RxStomp.html":{}}}],["mani",{"_index":774,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["manual",{"_index":750,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["map",{"_index":107,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["mark",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["match",{"_index":258,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["mean",{"_index":292,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["merchant",{"_index":687,"title":{},"body":{"license.html":{}}}],["merg",{"_index":671,"title":{},"body":{"license.html":{}}}],["messag",{"_index":30,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["message(",{"_index":400,"title":{},"body":{"classes/RxStomp.html":{}}}],["message.bodi",{"_index":735,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["message.headers['correl",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["message.headers['repli",{"_index":732,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["message]{@link",{"_index":322,"title":{},"body":{"classes/RxStomp.html":{}}}],["messages.next(messag",{"_index":430,"title":{},"body":{"classes/RxStomp.html":{}}}],["method",{"_index":49,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["michel",{"_index":645,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["miscellan",{"_index":603,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":221,"title":{},"body":{"classes/RxStomp.html":{}}}],["mit",{"_index":651,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":670,"title":{},"body":{"license.html":{}}}],["modul",{"_index":703,"title":{"modules.html":{}},"body":{"modules.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["more",{"_index":624,"title":{},"body":{"index.html":{}}}],["msg",{"_index":165,"title":{},"body":{"classes/RxStomp.html":{}}}],["multipl",{"_index":146,"title":{},"body":{"classes/RxStomp.html":{}}}],["myrabbitmq",{"_index":922,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["myserviceendpoint",{"_index":728,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["name",{"_index":172,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["necessari",{"_index":920,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["need",{"_index":198,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"index.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["new",{"_index":150,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["next",{"_index":408,"title":{},"body":{"classes/RxStomp.html":{}}}],["node",{"_index":879,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["node.j",{"_index":614,"title":{},"body":{"index.html":{}}}],["nodej",{"_index":869,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["noninfring",{"_index":691,"title":{},"body":{"license.html":{}}}],["noop",{"_index":339,"title":{},"body":{"classes/RxStomp.html":{}}}],["note",{"_index":274,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["notic",{"_index":679,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":124,"title":{},"body":{"classes/RxStomp.html":{}}}],["npm",{"_index":627,"title":{},"body":{"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["null",{"_index":219,"title":{},"body":{"classes/RxStomp.html":{}}}],["number",{"_index":255,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["object",{"_index":106,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"additional-documentation/sockjs-support.html":{}}}],["observ",{"_index":23,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"index.html":{}}}],["observable.cr",{"_index":423,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["observables/subjects/behaviorsubject",{"_index":36,"title":{},"body":{"classes/RxStomp.html":{}}}],["obtain",{"_index":661,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":821,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["occur",{"_index":68,"title":{},"body":{"classes/RxStomp.html":{}}}],["octet(",{"_index":220,"title":{},"body":{"classes/RxStomp.html":{}}}],["old",{"_index":790,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["on",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["onc",{"_index":764,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["onconnect",{"_index":372,"title":{},"body":{"classes/RxStomp.html":{}}}],["onstomperror",{"_index":375,"title":{},"body":{"classes/RxStomp.html":{}}}],["onwebsocketclos",{"_index":377,"title":{},"body":{"classes/RxStomp.html":{}}}],["op",{"_index":335,"title":{},"body":{"classes/RxStomp.html":{}}}],["open",{"_index":608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oper",{"_index":21,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{}}}],["option",{"_index":173,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["orient",{"_index":610,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":177,"title":{},"body":{"classes/RxStomp.html":{},"license.html":{}}}],["out",{"_index":209,"title":{},"body":{"classes/RxStomp.html":{},"license.html":{},"additional-documentation/change-log.html":{}}}],["outgo",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["outgoingmessag",{"_index":736,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["outlin",{"_index":778,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["over",{"_index":611,"title":{},"body":{"index.html":{}}}],["overview",{"_index":704,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":924,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["packag",{"_index":599,"title":{"dependencies.html":{}},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["package.json",{"_index":901,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["page",{"_index":709,"title":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}},"body":{"additional-documentation/how-to-contribute.html":{}}}],["param",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["paramet",{"_index":171,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["params.head",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["part",{"_index":425,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["particular",{"_index":689,"title":{},"body":{"license.html":{}}}],["pass",{"_index":262,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["passcod",{"_index":157,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["payload",{"_index":200,"title":{},"body":{"classes/RxStomp.html":{}}}],["per",{"_index":133,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["permiss",{"_index":655,"title":{},"body":{"license.html":{}}}],["permit",{"_index":675,"title":{},"body":{"license.html":{}}}],["person",{"_index":660,"title":{},"body":{"license.html":{}}}],["pleas",{"_index":99,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"index.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["plugin",{"_index":914,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["portion",{"_index":682,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":607,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/sockjs-support.html":{}}}],["practic",{"_index":236,"title":{},"body":{"classes/RxStomp.html":{}}}],["prefer",{"_index":127,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["present",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["primari",{"_index":855,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["prioriti",{"_index":226,"title":{},"body":{"classes/RxStomp.html":{}}}],["privat",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["procedur",{"_index":532,"title":{"additional-documentation/remote-procedure-call-(rpc).html":{}},"body":{"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["process",{"_index":119,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["program",{"_index":719,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["progress",{"_index":623,"title":{},"body":{"index.html":{}}}],["project",{"_index":884,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["promonet",{"_index":646,"title":{},"body":{"index.html":{}}}],["properli",{"_index":834,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["properti",{"_index":42,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["protect",{"_index":320,"title":{},"body":{"classes/RxStomp.html":{}}}],["protocol",{"_index":193,"title":{},"body":{"classes/RxStomp.html":{}}}],["provid",{"_index":87,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{},"license.html":{},"additional-documentation/how-to-contribute.html":{}}}],["public",{"_index":43,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["publish",{"_index":53,"title":{},"body":{"classes/RxStomp.html":{},"license.html":{}}}],["publish(paramet",{"_index":187,"title":{},"body":{"classes/RxStomp.html":{}}}],["publishparam",{"_index":188,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["pull",{"_index":849,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["purpos",{"_index":690,"title":{},"body":{"license.html":{}}}],["python.html",{"_index":723,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["queu",{"_index":240,"title":{},"body":{"classes/RxStomp.html":{}}}],["queue",{"_index":116,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["queue/rpc",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/test",{"_index":225,"title":{},"body":{"classes/RxStomp.html":{}}}],["queuedmessag",{"_index":350,"title":{},"body":{"classes/RxStomp.html":{}}}],["queuedmessages.length",{"_index":398,"title":{},"body":{"classes/RxStomp.html":{}}}],["quit",{"_index":287,"title":{},"body":{"classes/RxStomp.html":{}}}],["rabbitmq",{"_index":114,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["rais",{"_index":851,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["random",{"_index":254,"title":{},"body":{"classes/RxStomp.html":{}}}],["randomtext",{"_index":264,"title":{},"body":{"classes/RxStomp.html":{}}}],["re",{"_index":410,"title":{},"body":{"classes/RxStomp.html":{}}}],["re)connect",{"_index":67,"title":{},"body":{"classes/RxStomp.html":{}}}],["reactiv",{"_index":184,"title":{},"body":{"classes/RxStomp.html":{}}}],["read",{"_index":286,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["readme.md",{"_index":887,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["realli",{"_index":739,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["reason",{"_index":772,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["receipt",{"_index":249,"title":{},"body":{"classes/RxStomp.html":{}}}],["receiptid",{"_index":263,"title":{},"body":{"classes/RxStomp.html":{}}}],["receiv",{"_index":29,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["recent",{"_index":89,"title":{},"body":{"classes/RxStomp.html":{}}}],["reconnect",{"_index":93,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["reconnect_delay",{"_index":814,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["reconnectdelay",{"_index":162,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["refactor",{"_index":835,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["refer",{"_index":192,"title":{},"body":{"classes/RxStomp.html":{}}}],["regener",{"_index":946,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["relat",{"_index":34,"title":{},"body":{"classes/RxStomp.html":{}}}],["releas",{"_index":794,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["remain",{"_index":417,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["remot",{"_index":531,"title":{"additional-documentation/remote-procedure-call-(rpc).html":{}},"body":{"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["remov",{"_index":926,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["renam",{"_index":836,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["repli",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["replyqueuenam",{"_index":583,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["replyto",{"_index":731,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["report",{"_index":218,"title":{},"body":{"classes/RxStomp.html":{}}}],["repres",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["request",{"_index":120,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["request).subscribe((messag",{"_index":760,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["request/respons",{"_index":714,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["requir",{"_index":769,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["respons",{"_index":716,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["restrict",{"_index":667,"title":{},"body":{"license.html":{}}}],["resubscrib",{"_index":273,"title":{},"body":{"classes/RxStomp.html":{}}}],["result",{"_index":461,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["return",{"_index":27,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["right",{"_index":669,"title":{},"body":{"license.html":{}}}],["root",{"_index":894,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["rout",{"_index":715,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["rpc",{"_index":533,"title":{"additional-documentation/remote-procedure-call-(rpc).html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["rpc(param",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.t",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:23",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:42",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:50",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserv",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(messag",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["run",{"_index":863,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["rune",{"_index":935,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["runner.github.io",{"_index":865,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["rx",{"_index":311,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["rxj",{"_index":22,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"index.html":{}}}],["rxjs/oper",{"_index":307,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["rxstomp",{"_index":1,"title":{"classes/RxStomp.html":{}},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#activ",{"_index":185,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp#activate]{@link",{"_index":380,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp#configur",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":525,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactiv",{"_index":136,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate]{@link",{"_index":368,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp#decativ",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":528,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#watchforreceipt",{"_index":128,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp#watchforreceipt]{@link",{"_index":324,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp.activ",{"_index":169,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp.configur",{"_index":151,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp.publish({\"/queue/test",{"_index":231,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp.publish({destin",{"_index":224,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstomp.watchforreceipt(receiptid",{"_index":265,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstompconfig",{"_index":143,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#reconnectdelay",{"_index":134,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstompconfig#reconnectdelay]{@link",{"_index":367,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstompconfig#websocketfactori",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":526,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompvers",{"_index":512,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactori",{"_index":520,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":529,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rxstomprpcconfig",{"_index":537,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstompstat",{"_index":313,"title":{},"body":{"classes/RxStomp.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.connect",{"_index":390,"title":{},"body":{"classes/RxStomp.html":{}}}],["rxstompstate.open",{"_index":348,"title":{},"body":{"classes/RxStomp.html":{}}}],["safe",{"_index":71,"title":{},"body":{"classes/RxStomp.html":{}}}],["sam",{"_index":636,"title":{},"body":{"index.html":{}}}],["same",{"_index":418,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/how-to-contribute.html":{}}}],["sampl",{"_index":724,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["saveimport",{"_index":803,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["scm.com",{"_index":876,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["script",{"_index":889,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["second",{"_index":785,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["secur",{"_index":771,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["see",{"_index":222,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["sell",{"_index":674,"title":{},"body":{"license.html":{}}}],["send",{"_index":190,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["sent",{"_index":113,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["separ",{"_index":629,"title":{},"body":{"index.html":{}}}],["sequenc",{"_index":252,"title":{},"body":{"classes/RxStomp.html":{}}}],["serv",{"_index":934,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["server",{"_index":90,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["serverhead",{"_index":45,"title":{},"body":{"classes/RxStomp.html":{}}}],["servic",{"_index":746,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["set",{"_index":145,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["setup",{"_index":349,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["setupreplyqueu",{"_index":584,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["setupreplyqueuefntyp",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["shall",{"_index":680,"title":{},"body":{"license.html":{}}}],["share",{"_index":306,"title":{},"body":{"classes/RxStomp.html":{}}}],["show",{"_index":83,"title":{},"body":{"classes/RxStomp.html":{}}}],["similar",{"_index":517,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["simpl",{"_index":414,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["simpli",{"_index":782,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["simplifi",{"_index":776,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["singl",{"_index":767,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["situat",{"_index":386,"title":{},"body":{"classes/RxStomp.html":{}}}],["six",{"_index":722,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["skip",{"_index":230,"title":{},"body":{"classes/RxStomp.html":{}}}],["skipcontentlengthhead",{"_index":215,"title":{},"body":{"classes/RxStomp.html":{}}}],["socketprovid",{"_index":797,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["sockj",{"_index":518,"title":{"additional-documentation/sockjs-support.html":{}},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":523,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":805,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["softwar",{"_index":663,"title":{},"body":{"license.html":{}}}],["sometim",{"_index":207,"title":{},"body":{"classes/RxStomp.html":{}}}],["soon",{"_index":241,"title":{},"body":{"classes/RxStomp.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/how-to-contribute.html":{}}}],["spec",{"_index":839,"title":{},"body":{"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["spec/helpers/stomp.service.factory.t",{"_index":911,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["special",{"_index":419,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["specif",{"_index":101,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["specifi",{"_index":194,"title":{},"body":{"classes/RxStomp.html":{}}}],["src",{"_index":895,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["src/.../rx",{"_index":605,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/chang",{"_index":944,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["src/rx",{"_index":5,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/sockjs.md.html",{"_index":802,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["src/spec",{"_index":939,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["standard",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["start",{"_index":609,"title":{"index.html":{},"license.html":{}},"body":{"additional-documentation/how-to-contribute.html":{}}}],["state",{"_index":78,"title":{},"body":{"classes/RxStomp.html":{},"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":81,"title":{},"body":{"classes/RxStomp.html":{}}}],["step",{"_index":787,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stomp",{"_index":9,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/how-to-contribute.html":{}}}],["stomp.t",{"_index":6,"title":{},"body":{"classes/RxStomp.html":{},"coverage.html":{}}}],["stomp.ts:100",{"_index":95,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:114",{"_index":298,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:127",{"_index":60,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:200",{"_index":144,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:224",{"_index":130,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:259",{"_index":179,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:278",{"_index":174,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:325",{"_index":189,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:367",{"_index":270,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:43",{"_index":77,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:476",{"_index":245,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:51",{"_index":63,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:58",{"_index":86,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:75",{"_index":110,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp.ts:87",{"_index":123,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomp/stompj",{"_index":17,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"dependencies.html":{},"additional-documentation/change-log.html":{}}}],["stomp/stompjs]{@link",{"_index":314,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompclient",{"_index":57,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompconfig",{"_index":309,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["stompconfig.beforeconnect",{"_index":361,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompconfig.debug",{"_index":366,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompconnectedsubscript",{"_index":428,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompconnectedsubscription.unsubscrib",{"_index":434,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomperror",{"_index":46,"title":{},"body":{"classes/RxStomp.html":{}}}],["stomphead",{"_index":269,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["stompj",{"_index":388,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{}}}],["stomprpcconfig",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuenam",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueu",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfigforactivemq",{"_index":779,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stomprpcservic",{"_index":747,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stomprpcservice.rpc(myserviceendpoint",{"_index":759,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stomprservic",{"_index":752,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stompservic",{"_index":754,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stompservice.publish(replyto",{"_index":738,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stompservice.subscribe(myserviceendpoint).subscribe((messag",{"_index":730,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stompservice.subscribe(replyqueuenam",{"_index":783,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stompstat",{"_index":382,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompstate.open",{"_index":75,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompsubscript",{"_index":310,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompsubscription.unsubscrib",{"_index":435,"title":{},"body":{"classes/RxStomp.html":{}}}],["stompvers",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["stop",{"_index":138,"title":{},"body":{"classes/RxStomp.html":{}}}],["strang",{"_index":288,"title":{},"body":{"classes/RxStomp.html":{}}}],["stray",{"_index":118,"title":{},"body":{"classes/RxStomp.html":{}}}],["stream",{"_index":28,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["stream(param",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["streamlin",{"_index":798,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["string",{"_index":166,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["structur",{"_index":885,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["subject",{"_index":94,"title":{},"body":{"classes/RxStomp.html":{},"license.html":{}}}],["sublicens",{"_index":672,"title":{},"body":{"license.html":{}}}],["submit",{"_index":848,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["subscrib",{"_index":26,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["subscribe((messag",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscript",{"_index":304,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{}}}],["subset",{"_index":363,"title":{},"body":{"classes/RxStomp.html":{}}}],["substanti",{"_index":681,"title":{},"body":{"license.html":{}}}],["successfulli",{"_index":412,"title":{},"body":{"classes/RxStomp.html":{}}}],["suggest",{"_index":195,"title":{},"body":{"classes/RxStomp.html":{}}}],["suitabl",{"_index":586,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["summari",{"_index":853,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["support",{"_index":208,"title":{"additional-documentation/sockjs-support.html":{}},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["switch",{"_index":791,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["system",{"_index":845,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["t",{"_index":921,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tabl",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":890,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tell",{"_index":917,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["temp",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["temporari",{"_index":115,"title":{},"body":{"classes/RxStomp.html":{}}}],["termin",{"_index":766,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["test",{"_index":826,"title":{},"body":{"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["test.destin",{"_index":266,"title":{},"body":{"classes/RxStomp.html":{}}}],["text",{"_index":916,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["thing",{"_index":294,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["third",{"_index":757,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["this._beforeconnect",{"_index":340,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._changestate(rxstompstate.clos",{"_index":378,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._changestate(rxstompstate.connect",{"_index":370,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._changestate(rxstompstate.open",{"_index":374,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._debug",{"_index":341,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._debug(`attempt",{"_index":401,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._debug(`not",{"_index":394,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._debug(`request",{"_index":420,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._debug(`stomp",{"_index":436,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._debug(`stop",{"_index":433,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._debug(`wil",{"_index":399,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._queuedmessag",{"_index":397,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._queuedmessages.push(paramet",{"_index":395,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._repliesobserv",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((messag",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuenam",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._sendqueuedmessag",{"_index":352,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._serverheadersbehavioursubject",{"_index":353,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._serverheadersbehavioursubject$.next(frame.head",{"_index":373,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._serverheadersbehavioursubject$.pip",{"_index":356,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._setupreplyqueu",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuenam",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupunhandledmessag",{"_index":337,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._setupunhandledreceipt",{"_index":338,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompcli",{"_index":330,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.activ",{"_index":379,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.configur",{"_index":369,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.configure(stompconfig",{"_index":365,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.deactiv",{"_index":381,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.onunhandledmessag",{"_index":451,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.onunhandledreceipt",{"_index":455,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.publish(paramet",{"_index":393,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.subscribe(destin",{"_index":429,"title":{},"body":{"classes/RxStomp.html":{}}}],["this._stompclient.watchforreceipt(receiptid",{"_index":458,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.connect",{"_index":344,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.connected$.subscrib",{"_index":351,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.connectionst",{"_index":342,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.connectionstate$.getvalu",{"_index":383,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.connectionstate$.next(st",{"_index":460,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.connectionstate$.pip",{"_index":345,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.publish(queuedmessag",{"_index":402,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.rxstomp",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destin",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessag",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverhead",{"_index":355,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.stomperror",{"_index":358,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.stomperrors$.next(fram",{"_index":376,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.stream(params).pipe(first",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessag",{"_index":450,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.unhandledmessage$.next(messag",{"_index":452,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.unhandledreceipt",{"_index":454,"title":{},"body":{"classes/RxStomp.html":{}}}],["this.unhandledreceipts$.next(fram",{"_index":456,"title":{},"body":{"classes/RxStomp.html":{}}}],["those",{"_index":820,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["though",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["three",{"_index":930,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["time",{"_index":66,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["togeth",{"_index":940,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tool",{"_index":854,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["topic/echo",{"_index":729,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["topic/replies.${uuid.uuid",{"_index":781,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["topic/speci",{"_index":237,"title":{},"body":{"classes/RxStomp.html":{}}}],["tort",{"_index":701,"title":{},"body":{"license.html":{}}}],["transpar",{"_index":38,"title":{},"body":{"classes/RxStomp.html":{}}}],["travi",{"_index":846,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["treat",{"_index":915,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tri",{"_index":37,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["tricki",{"_index":385,"title":{},"body":{"classes/RxStomp.html":{}}}],["trigger",{"_index":64,"title":{},"body":{"classes/RxStomp.html":{}}}],["true",{"_index":175,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["tsc",{"_index":929,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tsconfig.json",{"_index":908,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["tslint",{"_index":837,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["turn",{"_index":751,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["twice",{"_index":439,"title":{},"body":{"classes/RxStomp.html":{}}}],["two",{"_index":289,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["type",{"_index":61,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":706,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":619,"title":{},"body":{"index.html":{},"additional-documentation/how-to-contribute.html":{}}}],["typic",{"_index":11,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["uint8array",{"_index":206,"title":{},"body":{"classes/RxStomp.html":{}}}],["uint8array](https://developer.mozilla.org/en",{"_index":391,"title":{},"body":{"classes/RxStomp.html":{}}}],["umd",{"_index":933,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unclear",{"_index":948,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["underli",{"_index":183,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{},"additional-documentation/sockjs-support.html":{}}}],["understand",{"_index":634,"title":{},"body":{"index.html":{}}}],["unexpect",{"_index":942,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["unhandl",{"_index":112,"title":{},"body":{"classes/RxStomp.html":{}}}],["unhandledmessag",{"_index":47,"title":{},"body":{"classes/RxStomp.html":{}}}],["unhandledreceipt",{"_index":48,"title":{},"body":{"classes/RxStomp.html":{}}}],["unintend",{"_index":301,"title":{},"body":{"classes/RxStomp.html":{}}}],["uniqu",{"_index":251,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["unit",{"_index":825,"title":{},"body":{"additional-documentation/sockjs-support.html":{},"additional-documentation/how-to-contribute.html":{}}}],["unsubscrib",{"_index":121,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["up",{"_index":878,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["updat",{"_index":943,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["url",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/sockjs-support.html":{}}}],["us",{"_index":82,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"index.html":{},"license.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["us/docs/web/javascript/reference/global_objects/uint8array",{"_index":392,"title":{},"body":{"classes/RxStomp.html":{}}}],["usag",{"_index":522,"title":{},"body":{"classes/RxStompConfig.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["user",{"_index":85,"title":{},"body":{"classes/RxStomp.html":{}}}],["usual",{"_index":710,"title":{},"body":{"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{}}}],["uuid",{"_index":253,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompRPC.html":{},"dependencies.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["uuid.uuid",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v5",{"_index":833,"title":{},"body":{"additional-documentation/change-log.html":{}}}],["valid",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["valu",{"_index":73,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/sockjs-support.html":{}}}],["var",{"_index":232,"title":{},"body":{"classes/RxStomp.html":{}}}],["variabl",{"_index":424,"title":{},"body":{"classes/RxStomp.html":{}}}],["variant",{"_index":931,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["veri",{"_index":293,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["version",{"_index":282,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{},"additional-documentation/how-to-contribute.html":{}}}],["versions(['1.0",{"_index":513,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["visit",{"_index":631,"title":{},"body":{"index.html":{}}}],["void",{"_index":141,"title":{},"body":{"classes/RxStomp.html":{},"classes/RxStompConfig.html":{}}}],["vs",{"_index":445,"title":{},"body":{"classes/RxStomp.html":{}}}],["wait",{"_index":811,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["waitforreceipt",{"_index":54,"title":{},"body":{"classes/RxStomp.html":{}}}],["waitforreceipt(receiptid",{"_index":244,"title":{},"body":{"classes/RxStomp.html":{}}}],["want",{"_index":633,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":683,"title":{},"body":{"license.html":{}}}],["watch",{"_index":55,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/how-to-contribute.html":{}}}],["watch(destin",{"_index":268,"title":{},"body":{"classes/RxStomp.html":{}}}],["way",{"_index":278,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["web",{"_index":612,"title":{},"body":{"index.html":{}}}],["web_stomp.ws_fram",{"_index":918,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["webpack",{"_index":866,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["webpack.config.jssetup",{"_index":909,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["websocket",{"_index":516,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{},"additional-documentation/sockjs-support.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/w",{"_index":521,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket/codo/extra/doc",{"_index":801,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["websocketfactori",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["webstomp",{"_index":913,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["well",{"_index":284,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}],["whenev",{"_index":411,"title":{},"body":{"classes/RxStomp.html":{}}}],["whether",{"_index":698,"title":{},"body":{"license.html":{}}}],["without",{"_index":666,"title":{},"body":{"license.html":{}}}],["wonder",{"_index":407,"title":{},"body":{"classes/RxStomp.html":{}}}],["work",{"_index":280,"title":{},"body":{"classes/RxStomp.html":{},"index.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{},"additional-documentation/sockjs-support.html":{},"additional-documentation/change-log.html":{},"additional-documentation/how-to-contribute.html":{}}}],["workflow",{"_index":937,"title":{},"body":{"additional-documentation/how-to-contribute.html":{}}}],["worri",{"_index":806,"title":{},"body":{"additional-documentation/sockjs-support.html":{}}}],["wrap",{"_index":16,"title":{},"body":{"classes/RxStomp.html":{}}}],["wrapper",{"_index":617,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":153,"title":{},"body":{"classes/RxStomp.html":{}}}],["ws://broker.329broker.com:15674/w",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["wss://broker.329broker.com:15674/w",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ye",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["yield",{"_index":105,"title":{},"body":{"classes/RxStomp.html":{},"additional-documentation/remote-procedure-call-(rpc).html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/RxStomp.html":{"url":"classes/RxStomp.html","title":"class - RxStomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rx-stomp.ts\n        \n\n            \n                Description\n            \n            \n                This is the main Stomp Client.\nTypically you will create an instance of this to connect to the STOMP broker.\nThis wraps @stomp/stompjs\nClient class.\nThe key difference is that it exposes operations as RxJS Observables.\nFor example when a STOMP endpoint is subscribed it returns an Observable\nthat will stream all received messages.\nWith exception of beforeConnect, functionality related to all callbacks in\n@stomp/stompjs Client\nis exposed as Observables/Subjects/BehaviorSubjects.\nRxStomp also tries to transparently handle connection failures.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connected$\n                            \n                            \n                                    Public\n                                connectionState$\n                            \n                            \n                                    Public\n                                serverHeaders$\n                            \n                            \n                                    Public\n                                stompErrors$\n                            \n                            \n                                    Public\n                                unhandledMessage$\n                            \n                            \n                                    Public\n                                unhandledReceipts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activate\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                connected\n                            \n                            \n                                    Public\n                                deactivate\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                            \n                                    Public\n                                watch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stompClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/rx-stomp.ts:127\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connected$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp.ts:51\n                            \n                        \n\n                \n                    \n                        Will trigger when connection is established.\nIt will trigger every time a (re)connection occurs.\nIf it is already connected it will trigger immediately.\nYou can safely ignore the value, as it will always be StompState.OPEN\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectionState$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp.ts:43\n                            \n                        \n\n                \n                    \n                        Connection State\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverHeaders$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverHeaders$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp.ts:58\n                            \n                        \n\n                \n                    \n                        Provides headers from most recent connection to the server as returned by the CONNECTED frame.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will trigger for each reconnection.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stompErrors$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stompErrors$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp.ts:100\n                            \n                        \n\n                \n                    \n                        It will stream all ERROR frames received from the STOMP Broker.\nA compliant STOMP Broker will close the connection after this type of frame.\nPlease check broker specific documentation for exact behavior.\nThis Observer will yield the received\nFrame\nobjects.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#onStompError\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unhandledMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unhandledMessage$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp.ts:75\n                            \n                        \n\n                \n                    \n                        This function will be called for any unhandled messages.\nIt is useful for receiving messages sent to RabbitMQ temporary queues.\nIt can also get invoked with stray messages while the server is processing\na request to unsubscribe from an endpoint.\nThis Observer will yield the received\nMessage\nobjects.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#onUnhandledMessage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unhandledReceipts$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unhandledReceipts$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp.ts:87\n                            \n                        \n\n                \n                    \n                        STOMP brokers can be requested to notify when an operation is actually completed.\nPrefer using RxStomp#watchForReceipt.\nThis Observer will yield the received\nFrame\nobjects.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#onUnhandledReceipt\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        activate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp.ts:224\n                            \n                        \n\n\n                \n                    \n                            Initiate the connection with the broker.\nIf the connection breaks, as per RxStompConfig#reconnectDelay,\nit will keep trying to reconnect.\nCall RxStomp#deactivate to disconnect and stop reconnection attempts.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#activate\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(rxStompConfig: RxStompConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp.ts:200\n                            \n                        \n\n\n                \n                    \n                            Set configuration. This method may be called multiple times.\nEach call will add to the existing configuration.\nExample:\n   *        const rxStomp = new RxStomp();\n   *        rxStomp.configure({\n   *          brokerURL: 'ws://127.0.0.1:15674/ws',\n   *          connectHeaders: {\n   *            login: 'guest',\n   *            passcode: 'guest'\n   *          },\n   *          heartbeatIncoming: 0,\n   *          heartbeatOutgoing: 20000,\n   *          reconnectDelay: 200,\n   *          debug: (msg: string): void => {\n   *            console.log(new Date(), msg);\n   *          }\n   *        });\n   *        rxStomp.activate();\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#configure\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                        \n                                                                    RxStompConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        connected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp.ts:278\n                            \n                        \n\n\n                \n                    \n                            It will return true if STOMP broker is connected and false otherwise.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp.ts:259\n                            \n                        \n\n\n                \n                    \n                            Disconnect if connected and stop auto reconnect loop.\nAppropriate callbacks will be invoked if underlying STOMP connection was connected.\nTo reactivate you can call RxStomp#activate.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#deactivate\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(parameters: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp.ts:325\n                            \n                        \n\n\n                \n                    \n                            Send a message to a named destination. Refer to your STOMP broker documentation for types\nand naming of destinations.\nSTOMP protocol specifies and suggests some headers and also allows broker specific headers.\nbody must be String.\nYou will need to covert the payload to string in case it is not string (e.g. JSON).\nTo send a binary message body use binaryBody parameter. It should be a\nUint8Array.\nSometimes brokers may not support binary frames out of the box.\nPlease check your broker documentation.\ncontent-length header is automatically added to the STOMP Frame sent to the broker.\nSet skipContentLengthHeader to indicate that content-length header should not be added.\nFor binary messages content-length header is always added.\nCaution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\nand content-length header is missing.\nSee: https://stomp-js.github.io/stompjs/interfaces/publishParams.html\n   *        rxStomp.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n   *\n   *        // Only destination is mandatory parameter\n   *        rxStomp.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n   *\n   *        // Skip content-length header in the frame to the broker\n   *        rxStomp.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n   *\n   *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n   *        // setting content-type header is not mandatory, however a good practice\n   *        rxStomp.publish({destination: '/topic/special', binaryBody: binaryData,\n   *                         headers: {'content-type': 'application/octet-stream'}});\n   *The message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#publish\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parameters\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp.ts:476\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual https://stomp-js.github.io/stompjs/classes/Frame.html\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.watchForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            watch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        watch(destination: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp.ts:367\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nNote that messages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\nThis method in the underlying library is called subscribe.\nIn earlier version it was called subscribe here as well.\nHowever subscribe is also used by RxJS and code read quite strange with two subscribe calls\nfollowing each other and both meaning very different things.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#subscribe\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stompClient\n                    \n                \n\n                \n                    \n                        getstompClient()\n                    \n                \n                            \n                                \n                                    Defined in src/rx-stomp.ts:114\n                                \n                            \n                    \n                        \n                                Instance of actual\n@stomp/stompjs\nClient.\nBe careful in calling methods on it directly - you may get unintended consequences.\n\n\n                                \n                                    Returns :     Client\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {BehaviorSubject, Observable, Observer, Subject, Subscription} from 'rxjs';\n\nimport {filter, share} from 'rxjs/operators';\n\nimport {\n  Client,\n  debugFnType,\n  Frame,\n  Message,\n  publishParams,\n  StompConfig,\n  StompHeaders,\n  StompSubscription\n} from '@stomp/stompjs';\n\nimport {RxStompConfig} from './rx-stomp-config';\nimport {RxStompState} from './rx-stomp-state';\n\n/**\n * This is the main Stomp Client.\n * Typically you will create an instance of this to connect to the STOMP broker.\n *\n * This wraps [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n * [Client]{@link https://stomp-js.github.io/stompjs/classes/Client.html} class.\n *\n * The key difference is that it exposes operations as RxJS Observables.\n * For example when a STOMP endpoint is subscribed it returns an Observable\n * that will stream all received messages.\n *\n * With exception of beforeConnect, functionality related to all callbacks in\n * [@stomp/stompjs Client]{@link https://stomp-js.github.io/stompjs/classes/Client.html}\n * is exposed as Observables/Subjects/BehaviorSubjects.\n *\n * RxStomp also tries to transparently handle connection failures.\n */\nexport class RxStomp {\n  /**\n   * Connection State\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public connectionState$: BehaviorSubject;\n\n  /**\n   * Will trigger when connection is established.\n   * It will trigger every time a (re)connection occurs.\n   * If it is already connected it will trigger immediately.\n   * You can safely ignore the value, as it will always be `StompState.OPEN`\n   */\n  public connected$: Observable;\n\n  /**\n   * Provides headers from most recent connection to the server as returned by the CONNECTED frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will trigger for each reconnection.\n   */\n  public serverHeaders$: Observable;\n\n  protected _serverHeadersBehaviourSubject$: BehaviorSubject;\n\n  /**\n   * This function will be called for any unhandled messages.\n   * It is useful for receiving messages sent to RabbitMQ temporary queues.\n   *\n   * It can also get invoked with stray messages while the server is processing\n   * a request to unsubscribe from an endpoint.\n   *\n   * This Observer will yield the received\n   * [Message]{@link https://stomp-js.github.io/stompjs/classes/Message.html}\n   * objects.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#onUnhandledMessage\n   */\n  public unhandledMessage$: Subject;\n\n  /**\n   * STOMP brokers can be requested to notify when an operation is actually completed.\n   * Prefer using [RxStomp#watchForReceipt]{@link RxStomp#watchForReceipt}.\n   *\n   * This Observer will yield the received\n   * [Frame]{@link https://stomp-js.github.io/stompjs/classes/Frame.html}\n   * objects.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#onUnhandledReceipt\n   */\n  public unhandledReceipts$: Subject;\n\n  /**\n   * It will stream all ERROR frames received from the STOMP Broker.\n   * A compliant STOMP Broker will close the connection after this type of frame.\n   * Please check broker specific documentation for exact behavior.\n   *\n   * This Observer will yield the received\n   * [Frame]{@link https://stomp-js.github.io/stompjs/classes/Frame.html}\n   * objects.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#onStompError\n   */\n  public stompErrors$: Subject;\n\n  /**\n   * Internal array to hold locally queued messages when STOMP broker is not connected.\n   */\n  protected _queuedMessages: publishParams[] = [];\n\n  /**\n   * Instance of actual\n   * [@stomp/stompjs]{@link https://github.com/stomp-js/stompjs}\n   * [Client]{@link https://stomp-js.github.io/stompjs/classes/Client.html}.\n   *\n   * **Be careful in calling methods on it directly - you may get unintended consequences.**\n   */\n  get stompClient(): Client {\n    return this._stompClient;\n  }\n  protected _stompClient: Client;\n\n  /**\n   * Before connect\n   */\n  protected _beforeConnect: () => void;\n\n  /**\n   * Will be assigned during configuration, no-op otherwise\n   */\n  protected _debug: debugFnType;\n\n  /**\n   * Constructor\n   */\n  public constructor() {\n    this._stompClient = new Client();\n\n    // Default messages\n    this._setupUnhandledMessages();\n\n    // Receipts\n    this._setupUnhandledReceipts();\n\n    const noOp = () => {};\n\n    // Before connect is no op by default\n    this._beforeConnect = noOp;\n\n    // debug is no-op by default\n    this._debug = noOp;\n\n    // Initial state is CLOSED\n    this.connectionState$ = new BehaviorSubject(RxStompState.CLOSED);\n\n    this.connected$ = this.connectionState$.pipe(\n      filter((currentState: RxStompState) => {\n        return currentState === RxStompState.OPEN;\n      })\n    );\n\n    // Setup sending queuedMessages\n    this.connected$.subscribe(() => {\n      this._sendQueuedMessages();\n    });\n\n    this._serverHeadersBehaviourSubject$ = new BehaviorSubject(null);\n\n    this.serverHeaders$ = this._serverHeadersBehaviourSubject$.pipe(\n      filter((headers: null | StompHeaders) => {\n        return headers !== null;\n      })\n    );\n\n    this.stompErrors$ = new Subject();\n  }\n\n  /**\n   * Set configuration. This method may be called multiple times.\n   * Each call will add to the existing configuration.\n   *\n   * Example:\n   *\n   * ```javascript\n   *        const rxStomp = new RxStomp();\n   *        rxStomp.configure({\n   *          brokerURL: 'ws://127.0.0.1:15674/ws',\n   *          connectHeaders: {\n   *            login: 'guest',\n   *            passcode: 'guest'\n   *          },\n   *          heartbeatIncoming: 0,\n   *          heartbeatOutgoing: 20000,\n   *          reconnectDelay: 200,\n   *          debug: (msg: string): void => {\n   *            console.log(new Date(), msg);\n   *          }\n   *        });\n   *        rxStomp.activate();\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#configure\n   */\n  public configure(rxStompConfig: RxStompConfig) {\n    const stompConfig: StompConfig = (Object as any).assign({}, rxStompConfig);\n\n    if (stompConfig.beforeConnect) {\n      this._beforeConnect = stompConfig.beforeConnect;\n      delete stompConfig.beforeConnect;\n    }\n\n    // RxStompConfig has subset of StompConfig fields\n    this._stompClient.configure(stompConfig);\n    if (stompConfig.debug) {\n      this._debug = stompConfig.debug;\n    }\n  }\n\n  /**\n   * Initiate the connection with the broker.\n   * If the connection breaks, as per [RxStompConfig#reconnectDelay]{@link RxStompConfig#reconnectDelay},\n   * it will keep trying to reconnect.\n   *\n   * Call [RxStomp#deactivate]{@link RxStomp#deactivate} to disconnect and stop reconnection attempts.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#activate\n   */\n  public activate(): void {\n    this._stompClient.configure({\n      beforeConnect: () => {\n        this._changeState(RxStompState.CONNECTING);\n\n        // Call handler\n        this._beforeConnect();\n      },\n      onConnect: (frame: Frame) => {\n        this._serverHeadersBehaviourSubject$.next(frame.headers);\n\n        // Indicate our connected state to observers\n        this._changeState(RxStompState.OPEN);\n      },\n      onStompError: (frame: Frame) => {\n        // Trigger the frame subject\n        this.stompErrors$.next(frame);\n      },\n      onWebSocketClose: () => {\n        this._changeState(RxStompState.CLOSED);\n      }\n    });\n\n    // Attempt connection\n    this._stompClient.activate();\n  }\n\n  /**\n   * Disconnect if connected and stop auto reconnect loop.\n   * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n   *\n   * To reactivate you can call [RxStomp#activate]{@link RxStomp#activate}.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#deactivate\n   */\n  public deactivate(): void {\n    // Disconnect if connected. Callback will set CLOSED state\n    this._stompClient.deactivate();\n\n    const stompState = this.connectionState$.getValue();\n    if (stompState === RxStompState.OPEN) {\n      // Notify observers that we are disconnecting!\n      this._changeState(RxStompState.CLOSING);\n    }\n    // This is bit tricky situation, it would be better handled at stompjs level\n    if (stompState === RxStompState.CONNECTING) {\n      // Notify observers that we are disconnecting!\n      this._changeState(RxStompState.CLOSED);\n    }\n  }\n\n  /**\n   * It will return `true` if STOMP broker is connected and `false` otherwise.\n   */\n  public connected(): boolean {\n    return this.connectionState$.getValue() === RxStompState.OPEN;\n  }\n\n  /**\n   * Send a message to a named destination. Refer to your STOMP broker documentation for types\n   * and naming of destinations.\n   *\n   * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n   *\n   * `body` must be String.\n   * You will need to covert the payload to string in case it is not string (e.g. JSON).\n   *\n   * To send a binary message body use binaryBody parameter. It should be a\n   * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n   * Sometimes brokers may not support binary frames out of the box.\n   * Please check your broker documentation.\n   *\n   * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n   * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n   * For binary messages `content-length` header is always added.\n   *\n   * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n   * and `content-length` header is missing.\n   *\n   * See: https://stomp-js.github.io/stompjs/interfaces/publishParams.html\n   *\n   * ```javascript\n   *        rxStomp.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n   *\n   *        // Only destination is mandatory parameter\n   *        rxStomp.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n   *\n   *        // Skip content-length header in the frame to the broker\n   *        rxStomp.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n   *\n   *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n   *        // setting content-type header is not mandatory, however a good practice\n   *        rxStomp.publish({destination: '/topic/special', binaryBody: binaryData,\n   *                         headers: {'content-type': 'application/octet-stream'}});\n   * ```\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#publish\n   */\n  public publish(parameters: publishParams): void {\n    if (this.connected()) {\n      this._stompClient.publish(parameters);\n    } else {\n      this._debug(`Not connected, queueing`);\n      this._queuedMessages.push(parameters);\n    }\n  }\n\n  /** It will send queued messages. */\n  protected _sendQueuedMessages(): void {\n    const queuedMessages = this._queuedMessages;\n    this._queuedMessages = [];\n\n    if (queuedMessages.length === 0) {\n      return;\n    }\n\n    this._debug(`Will try sending  ${queuedMessages.length} queued message(s)`);\n\n    for (const queuedMessage of queuedMessages) {\n      this._debug(`Attempting to send ${queuedMessage}`);\n      this.publish(queuedMessage);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * Note that messages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * This method in the underlying library is called `subscribe`.\n   * In earlier version it was called `subscribe` here as well.\n   * However `subscribe` is also used by RxJS and code read quite strange with two subscribe calls\n   * following each other and both meaning very different things.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#subscribe\n   */\n  public watch(destination: string, headers: StompHeaders = {}): Observable {\n\n    /* Well the logic is complicated but works beautifully. RxJS is indeed wonderful.\n     *\n     * We need to activate the underlying subscription immediately if Stomp is connected. If not it should\n     * subscribe when it gets next connected. Further it should re establish the subscription whenever Stomp\n     * successfully reconnects.\n     *\n     * Actual implementation is simple, we filter the BehaviourSubject 'state' so that we can trigger whenever Stomp is\n     * connected. Since 'state' is a BehaviourSubject, if Stomp is already connected, it will immediately trigger.\n     *\n     * The observable that we return to caller remains same across all reconnects, so no special handling needed at\n     * the message subscriber.\n     */\n    this._debug(`Request to subscribe ${destination}`);\n\n    // By default auto acknowledgement of messages\n    if (!headers.ack) {\n      headers.ack = 'auto';\n    }\n\n    const coldObservable = Observable.create(\n      (messages: Observer) => {\n        /*\n         * These variables will be used as part of the closure and work their magic during unsubscribe\n         */\n        let stompSubscription: StompSubscription;\n\n        let stompConnectedSubscription: Subscription;\n\n        stompConnectedSubscription = this.connected$.subscribe(() => {\n            this._debug(`Will subscribe to ${destination}`);\n            stompSubscription = this._stompClient.subscribe(destination, (message: Message) => {\n                messages.next(message);\n              },\n              headers);\n          });\n\n        return () => { /* cleanup function, will be called when no subscribers are left */\n          this._debug(`Stop watching connection state (for ${destination})`);\n          stompConnectedSubscription.unsubscribe();\n\n          if (this.connected()) {\n            this._debug(`Will unsubscribe from ${destination} at Stomp`);\n            stompSubscription.unsubscribe();\n          } else {\n            this._debug(`Stomp not connected, no need to unsubscribe from ${destination} at Stomp`);\n          }\n        };\n      });\n\n    /**\n     * Important - convert it to hot Observable - otherwise, if the user code subscribes\n     * to this observable twice, it will subscribe twice to Stomp broker. (This was happening in the current example).\n     * A long but good explanatory article at https://medium.com/@benlesh/hot-vs-cold-observables-f8094ed53339\n     */\n    return coldObservable.pipe(share());\n  }\n\n  /**\n   * Setup streaming unhandled messages.\n   */\n  protected _setupUnhandledMessages(): void {\n    this.unhandledMessage$ = new Subject();\n\n    this._stompClient.onUnhandledMessage = (message: Message) => {\n      this.unhandledMessage$.next(message);\n    };\n  }\n\n  /**\n   * Setup streaming unhandled receipts.\n   */\n  protected _setupUnhandledReceipts(): void {\n    this.unhandledReceipts$ = new Subject();\n\n    this._stompClient.onUnhandledReceipt = (frame: Frame) => {\n      this.unhandledReceipts$.next(frame);\n    };\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link https://stomp-js.github.io/stompjs/classes/Frame.html}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.watchForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    this._stompClient.watchForReceipt(receiptId, callback);\n  }\n\n  protected _changeState(state: RxStompState): void {\n    this.connectionState$.next(state);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeConnect:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:105\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        brokerURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:19\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     debugFnType\n\n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disconnectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatIncoming:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatOutgoing:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnectDelay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:65\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stompVersions:     Versions\n\n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketFactory:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-config.ts:58\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n */\n\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n   */\n  public stompVersions?: Versions;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n   */\n  public beforeConnect?: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in src/rx-stomp-rpc.ts:23\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp-rpc.ts:42\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rx-stomp-rpc.ts:50\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport {Message, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueueName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-rpc-config.ts:18\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setupReplyQueue:     setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rx-stomp-rpc-config.ts:22\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/rx-stomp-config.ts\n            \n            \n                class\n            \n            \n                RxStompConfig\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/rx-stomp-rpc-config.ts\n            \n            \n                class\n            \n            \n                RxStompRPCConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/rx-stomp-rpc.ts\n            \n            \n                class\n            \n            \n                RxStompRPC\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/rx-stomp.ts\n            \n            \n                class\n            \n            \n                RxStomp\n            \n            \n                100 %\n                (15/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^5.0.0\n        \n            angular2-uuid : ^1.1.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (src/.../rx-stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRxStomp\n\nThis library provides a RxJS oriented STOMP over WebSocket client for Web browser or node.js\napplications.\nIntroduction\nThis is a wrapper over https://github.com/stomp-js/stompjs.\nIt exposes the STOMP operations as RxJS Observables.\nIt provides almost all operations provided by the underlying library.\nThis has been developed using TypeScript and includes typing information in the distribution.\nWork in Progress\nMore to come :)\nTypeScript definitions\nThe npm package includes TypeScript definitions, so there is no need no install it separately.\nChange log\nPlease visit Change Log.\nContributing\nIf you want to understand the code, develop, or contribute. Please visit\nHow to contribute. \nAuthors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\nand https://github.com/stomp-js/stompjs\n\nLicense\nLicense - MIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2018 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            setupReplyQueueFnType   (src/.../rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/rx-stomp-rpc-config.ts\n    \n        \n            \n                \n                    \n                        \n                        setupReplyQueueFnType\n                    \n                \n                    \n                        \n                            See the guide for example\n\n                        \n                    \n                \n                    \n                        setupReplyQueueFnType:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/remote-procedure-call-(rpc).html":{"url":"additional-documentation/remote-procedure-call-(rpc).html","title":"additional-page - Remote Procedure Call (RPC)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRPC - Remote Procedure Call\nMessaging usually works one way.\nThere is however a convention for two way communication (i.e. request/response).\nThis involves reply-to queues which routes the response back to correct client program\nand correlation-id to uniquely match a response to the correct request.\nSee: https://www.rabbitmq.com/tutorials/tutorial-six-python.html for a sample using\na very similar approach.\nImplementing the RPC server endpoint\nThis can be implemented in any language, in most cases it will be there in some backend server.\n    const myServiceEndPoint = '/topic/echo';\n\n    stompService.subscribe(myServiceEndPoint).subscribe((message: Message) => {\n      // The response needs to be sent back here\n      const replyTo = message.headers['reply-to'];\n\n      // Same correlation id needs to be sent back as message header\n      const correlationId = message.headers['correlation-id'];\n\n      // Process the request, compute the response\n      const incomingMessage = message.body;\n\n      const outgoingMessage = 'Echoing - ' + incomingMessage;\n\n      // Send the response back to destination `replyTo` with `correlation-id` header\n      stompService.publish(replyTo, outgoingMessage, {'correlation-id' : correlationId});\n    });Using it from the client\nRabbitMQ\nRabbitMQ has special support for temp-queues in reply-to messages\nwhich make things to work magically. Really I mean it.\nIf you don't believe me check details at https://www.rabbitmq.com/stomp.html#d.tqd\nWell the client code looks equally simple and similar to what you would expect\nto use with any backend service.\nThe StompRPCService can be created by means of Angular Dependency Injection\nor be created manually.\nIt in turns needs an initialized StompRService as\na dependency (or argument).\nStompService is a derived class of StompRService, so that will work as well.\n    const myServiceEndPoint = '/topic/echo';\n\n    const request = 'Hello';\n    // It accepts a optional third argument a Hash of headers to be sent as part of the request\n    stompRPCService.rpc(myServiceEndPoint, request).subscribe((message: Message) => {\n      // Consume the response\n      console.log(message.body);\n    });Just like Ajax requests, it will yield only once.\nThere is another method called stream that will not terminate after one response.\nThis can be used to receive stream of responses for a single request.\nIf you use that it will be your responsibility to unsubscribe when you do not expect\nany additional messages.\nOther Brokers\nThere are few requirements:\n\nthe reply queue name must be unique across the broker.\nideally, for security reasons only the client creating the queue should have access to it.\n\nMany brokers have temp-queue concept which should simplify your work. \nFollowing gives and outline:\n  const stompRPCConfigForActiveMQ = {\n    // A unique name, BTW angular2-uuid module is already added as dependency\n    replyQueueName: `/topic/replies.${UUID.UUID()}`,\n\n    // Simply subscribe, you would need to secure by adding broker specific options\n    setupReplyQueue: (replyQueueName: string, stompService: StompRService) => {\n      return stompService.subscribe(replyQueueName);\n    }\n  };This custom config would need to be passed as second parameter in StompRPCService\nconstructor, or, can be passed as an Angular Dependency.\nApart from this additional setup step usage remains same as RabbitMQ case as documented above.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sockjs-support.html":{"url":"additional-documentation/sockjs-support.html","title":"additional-page - SockJS Support","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/change-log.html":{"url":"additional-documentation/change-log.html","title":"additional-page - Change Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\n0.1.0-beta.2 (2018-10-28)\n\nUses @stomp/stompjs v5 properly\nInitial documentation\nRefactors and renames\ntslint clean\nRefactored specs \n\n0.1.0-beta.1 (2018-10-13)\n\nFactored out from https://github.com/stomp-js/ng2-stompjs\nBuild/test/doc systems are working\nTravis is setup\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-to-contribute.html":{"url":"additional-documentation/how-to-contribute.html","title":"additional-page - How to Contribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nHow to contribute\n\nFile issues.\nEdit/write documentation.\nSubmit pull requests.\nTest in different environments.\nRaise awareness.\n\nSummary of tools\nFollowing tools are getting used:\n\nTypeScript as primary language - https://www.typescriptlang.org/\ncompodoc for API documentation - https://compodoc.app/\nJasmine for test cases - https://jasmine.github.io/\nKarma for running test cases in browsers - http://karma-runner.github.io/\nwebpack for build - https://webpack.js.org/\nnodejs during development - https://nodejs.org/\nnpm for dependency management, packaging and distribution - https://www.npmjs.com/\ngit for version control - https://git-scm.com/\n\nInitial setup\nInstructions on setting up development environment:\n\nInstall node and npm - https://nodejs.org/\nCheckout code from GitHub - you may fork the code first into your GitHub account.\nUse npm i to install dependencies:  $ npm i\n\nProject structure\n\n├── LICENSE.md\n├── README.md\n├── bin/                     -- Scripts invoked from `npm` tasks\n├── bundles/                 -- Generated code browsers\n├── docs/                    -- Generated docs, root for GitHub pages\n├── docs-src/                -- Source for guides\n├── esm5/                    -- Generated ES5 modules\n├── index.d.ts\n├── karma.conf.js\n├── package-lock.json\n├── package.json\n├── rabbitmq/\n│   └── Dockerfile           -- This builds a docker image that is used to run test cases\n├── spec/                    -- These test cases run both for nodejs (using just Jasmine) and Chrome (Jasmine/Karma)\n│   ├── helpers/\n│   └── unit/                -- Test cases using Jasmine\n├── src/                     -- Typescript sources\n├── tsconfig.json\n└── webpack.config.jsSetup a Stomp broker\n\nA Stomp broker is used for running the tests. I have been using RabbitMQ.\nEdit spec/helpers/stomp.service.factory.ts as per\nyour setup. Defaults should work for as RabbitMQ default setup on localhost.\nPlease note that in RabbitMQ you will need to enable Stomp and WebStomp plugins.\nBy default RabbitMQ WebStomp will treat messages a text, you will need to tell\nit is use binary frames:  $ echo 'web_stomp.ws_frame = binary' >> /etc/rabbitmq/rabbitmq.conf\nA RabbitMQ Dockerfile is provided with necessary plugins and configuration. To use it, run:  $ docker build -t myrabbitmq rabbitmq/ # Needed only once\n  $ docker run -d -p 15674:15674 myrabbitmq # to start the broker\n\nBuilding and testing\nKey npm tasks:\nclean - Remove generated built artifacts\nbuild-tsc - Internally used by `npm run build`\nbuild-webpack - Internally used by `npm run build`\nbuild - Build three variants - ES5, ES6, and UMD\ndoc - Generate docs\ndoc-serve - Generate docs and watch for changes\nkarma - Rune test in browsersBasic development workflow\n\nCheckout a new branch.\nMake code changes (src/specs)\nBuild: $ npm run build\nRun tests:\nTo run tests using nodejs:  $ npm run test\nTo run tests using Chrome:  $ npm run karma\nCaution: As both browser and nodejs use same set of test cases and same queue\nnames. So, running both together may cause unexpected failures.\n\n\nUpdate documentation - do update the docs-src/Change-log.md\nRegenerate documentation: $ npm run doc\nPlease follow GitHub guidelines. Raise an issue if you are unclear.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
